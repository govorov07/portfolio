class PageBuilder {
    constructor() {
        this.templates = {};
        this.currentPage = null;
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö —à–∞–±–ª–æ–Ω–æ–≤
    async loadTemplates() {
        const templateFiles = [
            'base.html', 'sidebar.html', 'search.html', 
            'navigation.html', 'content.html',
            'components/header.html', 'components/table.html',
            'components/note.html', 'components/section.html'
        ];

        for (const file of templateFiles) {
            try {
                const response = await fetch(`templates/${file}`);
                this.templates[file] = await response.text();
            } catch (error) {
                console.error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —à–∞–±–ª–æ–Ω–∞ ${file}:`, error);
            }
        }
    }

    // –†–µ–Ω–¥–µ—Ä —à–∞–±–ª–æ–Ω–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
    renderTemplate(templateName, data = {}) {
        let html = this.templates[templateName];
        
        // –ü—Ä–æ—Å—Ç–∞—è —Å–∏—Å—Ç–µ–º–∞ —à–∞–±–ª–æ–Ω–æ–≤ —Å –∑–∞–º–µ–Ω–æ–π {{–ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö}}
        html = html.replace(/\{\{(\w+)\}\}/g, (match, key) => {
            return data[key] || '';
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —á–∞—Å—Ç–∏—á–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤ {{> partial}}
        html = html.replace(/\{\{> (\S+)\}\}/g, (match, partialName) => {
            return this.templates[`${partialName}.html`] || '';
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –±–ª–æ–∫–æ–≤ {{#each}}...{{/each}}
        html = html.replace(/\{\{#each (\w+)\}\}(.*?)\{\{\/each\}\}/gs, (match, arrayName, content) => {
            const array = data[arrayName] || [];
            return array.map(item => {
                return content.replace(/\{\{(\w+)\}\}/g, (m, key) => {
                    return item[key] || '';
                });
            }).join('');
        });

        return html;
    }

    // –°–±–æ—Ä–∫–∞ –ø–æ–ª–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    async buildPage(pageData) {
        await this.loadTemplates();
        
        // –°–æ–±–∏—Ä–∞–µ–º —Å–∞–π–¥–±–∞—Ä
        const sidebarHTML = this.renderTemplate('sidebar.html');
        
        // –°–æ–±–∏—Ä–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
        const contentHTML = this.renderTemplate('content.html', pageData);
        
        // –°–æ–±–∏—Ä–∞–µ–º –±–∞–∑–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        const fullHTML = this.renderTemplate('base.html', {
            title: pageData.title,
            sidebar: sidebarHTML,
            content: contentHTML
        });

        document.write(fullHTML);
        document.close();
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    async loadPage(pageId) {
        try {
            const response = await fetch(`data/pages/${pageId}.json`);
            const pageData = await response.json();
            this.buildPage(pageData);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', error);
        }
    }
}

// üìä –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã (`data/pages/main.json`)
const pageData = {
    title: "SSM - Soft Systems Methodology by Checkland",
    pageTitle: "SSM - Soft Systems Methodology by Checkland",
    sections: [
        {
            header: {
                anchor: "Bookmark2",
                number: "1",
                title: "–í–≤–µ–¥–µ–Ω–∏–µ"
            },
            table: {
                rows: [
                    {
                        label: "–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –∑–∞ —Ç–µ—Ö.—Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –ø—Ä–æ–¥—É–∫—Ç–∞",
                        content: `<p><a href="#">–°–µ—Ä–≥–µ–π –ë—É–ª—å–¥—è–µ–≤</a></p>`
                    },
                    {
                        label: "–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –∑–∞ –¥–æ–∫—É–º–µ–Ω—Ç", 
                        content: `<p>–°–∏—Å—Ç–µ–º–Ω—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫ <a href="#">–†—É—Å—Ç–∞–º –ê–ª–∏–µ–≤</a></p>`
                    },
                    {
                        label: "–¢–µ–º–∞",
                        content: "<p>–ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è SSM (Soft Systems Methodology)</p>"
                    }
                ]
            }
        },
        {
            header: {
                anchor: "Bookmark4", 
                number: "2",
                title: "–û–±—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ"
            },
            paragraphs: [
                "<strong>SSM</strong> ‚Äì —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏ —Å–∏—Å—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–¥—Ö–æ–¥ –∫ —Å–ª–æ–∂–Ω—ã–º –∏ —á–∞—Å—Ç–æ ¬´–Ω–µ–æ–¥–Ω–æ–∑–Ω–∞—á–Ω—ã–º¬ª –ø—Ä–æ–±–ª–µ–º–∞–º...",
                "Soft Systems Methodology —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö —ç—Ç–∞–ø–æ–≤:"
            ],
            table: {
                rows: [
                    {
                        label: "–í–≤–µ–¥–µ–Ω–∏–µ –≤ –ø—Ä–æ–±–ª–µ–º–Ω—É—é —Å–∏—Ç—É–∞—Ü–∏—é",
                        content: "<p><em>–£—è—Å–Ω–∏ —Å—É—Ç—å –ø—Ä–æ–±–ª–µ–º—ã</em></p><p>–ù—É–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –ø—Ä–æ–±–ª–µ–º—É –∏ —Å–æ–±—Ä–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é...</p>"
                    },
                    // ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
                ]
            },
            note: {
                text: "–≠—Ç–∞–ø—ã –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–ª–µ–¥—É—é—Ç –≤ –ª–∏–Ω–µ–π–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –∏—Ö –º–æ–∂–Ω–æ –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å, —É—Ç–æ—á–Ω—è—Ç—å –∏–ª–∏ –ø–æ–≤—Ç–æ—Ä—è—Ç—å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏."
            }
        }
    ]
};

// üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', () => {
    const pageBuilder = new PageBuilder();
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–∑ URL
    const urlParams = new URLSearchParams(window.location.search);
    const pageId = urlParams.get('page') || 'main';
    
    pageBuilder.loadPage(pageId);
});